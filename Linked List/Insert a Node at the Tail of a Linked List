### Insert a Node at the Tail of a Linked List - ITERATION
```
    static SinglyLinkedListNode insertNodeAtTail(SinglyLinkedListNode head, int data){
        SinglyLinkedListNode node = new SinglyLinkedListNode(data);     // Create a new node with the given data
        if(head==null) return node;
        SinglyLinkedListNode temp = head;
        while(temp.next!=null){
            temp=temp.next;
        }
        temp.next=node;    //Since pointer of head and temp are actually the same addresses, by adding data to the end of temp, the same data gets added to head as well
        return head;
    }
```

**The reason ehre we used temp is actually a way to traverse a LL, since, by updating the curr with their next, not onyl we are travelling it but the data gets modified. So, hea dis still our original LL, but wit the finall address pointing to data node.**

### Insert a Node at the Tail of a Linked List - RECURSION
```
    static SinglyLinkedListNode insertNodeAtTail(SinglyLinkedListNode head, int data){
        if(head==null) head = new SinglyLinkedListNode(data);
        else head.next = insertNodeAtTail(head.next, data);
        return head;
    }
```
