/* USING STRINGBUILDER */
    public static String superReducedString(String s) {
        StringBuilder sb = new StringBuilder(s); 
        for(int i=0;i<sb.length()-1;i++){
            if(sb.charAt(i)==sb.charAt(i+1)){
                sb.delete(i, i+2);
                if(sb.length()==0) return "Empty String";
                i=-1;
            }
        }
        return sb.toString();
    }


/* USING STACK */
    public static String superReducedString(String s) {
        Stack<Character> stack = new Stack<>();
        stack.add(s.charAt(0));
        for(int i=1;i<s.length();i++){
            if(!stack.isEmpty() && s.charAt(i)==stack.peek()) stack.pop();
            else stack.add(s.charAt(i));
        }
        if(stack.isEmpty()) return "Empty String";
        else{
            StringBuilder result = new StringBuilder(); 
            while(!stack.isEmpty()) result.insert(0,stack.pop());
            return result.toString();
        }
    }
